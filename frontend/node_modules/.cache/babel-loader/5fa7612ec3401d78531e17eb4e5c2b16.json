{"ast":null,"code":"import axios from \"axios\";\nvar baseURL;\nbaseURL = \"https://restro-cafe-gersem-backend.herokuapp.com/\";\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default class API {\n  constructor() {\n    this.getPosts = async () => {\n      const posts = await api.get(\"/posts/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n\n    this.addPost = async (name, body, image) => {\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"body\", body);\n      formData.append(\"image\", image);\n      const savedPost = await api.post(\"/posts/add/\", formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n\n    this.deletePost = async id => {\n      const response = await api.delete(\"/posts/delete/\" + id + \"/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n\n    this.getItems = async category => {\n      let url = \"/items\";\n\n      if (category) {\n        url += \"?category=\" + category;\n      }\n\n      const items = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return items;\n    };\n\n    this.getReviews = async item_id => {\n      let url = \"/reviews?item_id=\" + item_id;\n      const reviews = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return reviews;\n    };\n\n    this.writeReview = async (item_id, name, body, like_count) => {\n      const formData = new FormData();\n      formData.append(\"item\", item_id);\n      formData.append(\"name\", name);\n      formData.append(\"body\", body);\n      formData.append(\"like_count\", like_count);\n      const savedReview = await api.post(\"/reviews/add\", formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedReview;\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/habta/OneDrive/Desktop/restrocafe/frontend/src/API.js"],"names":["axios","baseURL","api","create","headers","API","getPosts","posts","get","then","response","data","catch","error","Error","addPost","name","body","image","formData","FormData","append","savedPost","post","deletePost","id","delete","getItems","category","url","items","getReviews","item_id","reviews","writeReview","like_count","savedReview"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nvar baseURL;\n\n\nbaseURL = \"https://restro-cafe-gersem-backend.herokuapp.com/\";\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default class API {\n  ////////////////////////////////\n  // Post : sample\n  ////////////////////////////////\n  getPosts = async () => {\n    const posts = await api\n      .get(\"/posts/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return posts;\n  };\n  addPost = async (name, body, image) => {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"body\", body);\n    formData.append(\"image\", image);\n    const savedPost = await api\n      .post(\"/posts/add/\", formData)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedPost;\n  };\n  deletePost = async (id) => {\n    const response = await api\n      .delete(\"/posts/delete/\" + id + \"/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return response;\n  };\n  ////////////////////////////////\n  // Item\n  ////////////////////////////////\n  getItems = async (category) => {\n    let url = \"/items\";\n    if (category) {\n      url += \"?category=\" + category;\n    }\n    const items = await api\n      .get(url)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return items;\n  };\n  ////////////////////////////////\n  // Review\n  ////////////////////////////////\n  getReviews = async (item_id) => {\n    let url = \"/reviews?item_id=\" + item_id;\n    const reviews = await api\n      .get(url)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return reviews;\n  };\n  writeReview = async (item_id, name, body, like_count) => {\n    const formData = new FormData();\n    formData.append(\"item\", item_id);\n    formData.append(\"name\", name);\n    formData.append(\"body\", body);\n    formData.append(\"like_count\", like_count);\n    const savedReview = await api\n      .post(\"/reviews/add\", formData)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedReview;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}