{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\habta\\\\OneDrive\\\\Desktop\\\\restrocafe\\\\frontend\\\\src\\\\components\\\\Popup\\\\Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ImgReaction1 from \"../../assets/img/reaction1.svg\";\nimport ImgReaction2 from \"../../assets/img/reaction2.svg\";\nimport ImgReaction3 from \"../../assets/img/reaction3.svg\";\nimport ImgReaction0 from \"../../assets/img/reaction0.svg\";\nimport ImgIconCross from \"../../assets/img/cross.svg\";\nimport API from \"../../API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = new API();\n\nconst Reviews = ({\n  selectedItemId,\n  setSelectedItemId,\n  setShowReviews\n}) => {\n  _s();\n\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    api.getReviews(selectedItemId).then(reviews => {\n      setSelectedItemId(null);\n      setReviews(reviews);\n    });\n  }, []);\n\n  const getImgReaction = like_count => {\n    switch (like_count) {\n      case 1:\n        return ImgReaction1;\n\n      case 2:\n        return ImgReaction2;\n\n      case 3:\n        return ImgReaction3;\n\n      default:\n        return ImgReaction0;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    class: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"innter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"popup-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"innter\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: ImgIconCross,\n            onClick: () => setShowReviews(false),\n            class: \"cross\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"reviews\",\n            children: reviews && reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: getImgReaction(review.like_count),\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"name\",\n                children: review.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"body\",\n                children: review.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reviews, \"FPrwLLWcZBXrtWYcIRYMKBd2Ocw=\");\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["C:/Users/habta/OneDrive/Desktop/restrocafe/frontend/src/components/Popup/Reviews.jsx"],"names":["React","useEffect","useState","API","api","Reviews","selectedItemId","setSelectedItemId","setShowReviews","reviews","setReviews","getReviews","then","getImgReaction","like_count","ImgReaction1","ImgReaction2","ImgReaction3","ImgReaction0","ImgIconCross","map","review","name","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAMA,OAAOC,GAAP,MAAgB,WAAhB;;AAEA,MAAMC,GAAG,GAAG,IAAID,GAAJ,EAAZ;;AAEA,MAAME,OAAO,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,iBAAlB;AAAqCC,EAAAA;AAArC,CAAD,KAA2D;AAAA;;AACzE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,GAAG,CAACO,UAAJ,CAAeL,cAAf,EAA+BM,IAA/B,CAAqCH,OAAD,IAAa;AAC/CF,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAG,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMI,cAAc,GAAIC,UAAD,IAAgB;AACrC,YAAQA,UAAR;AACE,WAAK,CAAL;AACE,eAAOC,YAAP;;AACF,WAAK,CAAL;AACE,eAAOC,YAAP;;AACF,WAAK,CAAL;AACE,eAAOC,YAAP;;AACF;AACE,eAAOC,YAAP;AARJ;AAUD,GAXD;;AAaA,sBACE;AAAS,IAAA,KAAK,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,eAAX;AAAA,+BACE;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEC,YAAV;AAAwB,YAAA,OAAO,EAAE,MAAMX,cAAc,CAAC,KAAD,CAArD;AAA8D,YAAA,KAAK,EAAC,OAApE;AAA4E,YAAA,GAAG,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAC,SAAV;AAAA,sBACGC,OAAO,IACNA,OAAO,CAACW,GAAR,CAAaC,MAAD,iBACV;AAAA,sCACE;AAAK,gBAAA,GAAG,EAAER,cAAc,CAACQ,MAAM,CAACP,UAAR,CAAxB;AAA6C,gBAAA,GAAG,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,KAAK,EAAC,MAAX;AAAA,0BAAmBO,MAAM,CAACC;AAA1B;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAK,gBAAA,KAAK,EAAC,MAAX;AAAA,0BAAmBD,MAAM,CAACE;AAA1B;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA7CD;;GAAMlB,O;;KAAAA,O;AA+CN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ImgReaction1 from \"../../assets/img/reaction1.svg\";\nimport ImgReaction2 from \"../../assets/img/reaction2.svg\";\nimport ImgReaction3 from \"../../assets/img/reaction3.svg\";\nimport ImgReaction0 from \"../../assets/img/reaction0.svg\";\nimport ImgIconCross from \"../../assets/img/cross.svg\";\nimport API from \"../../API\";\n\nconst api = new API();\n\nconst Reviews = ({ selectedItemId, setSelectedItemId, setShowReviews }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    api.getReviews(selectedItemId).then((reviews) => {\n      setSelectedItemId(null);\n      setReviews(reviews);\n    });\n  }, []);\n\n  const getImgReaction = (like_count) => {\n    switch (like_count) {\n      case 1:\n        return ImgReaction1;\n      case 2:\n        return ImgReaction2;\n      case 3:\n        return ImgReaction3;\n      default:\n        return ImgReaction0;\n    }\n  };\n\n  return (\n    <section class=\"popup\">\n      <div class=\"innter\">\n        <div class=\"popup-content\">\n          <div class=\"innter\">\n            <img src={ImgIconCross} onClick={() => setShowReviews(false)} class=\"cross\" alt=\"\" />\n            <h2>Reviews</h2>\n            <ul class=\"reviews\">\n              {reviews &&\n                reviews.map((review) => (\n                  <li>\n                    <img src={getImgReaction(review.like_count)} alt=\"\" />\n                    <div class=\"name\">{review.name}</div>\n                    <div class=\"body\">{review.body}</div>\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}